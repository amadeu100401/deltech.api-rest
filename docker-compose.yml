version: '3.8'

services:
  mssql:
    build:
      dockerfile: Dockerfile.mssql
    container_name: sqlserver-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=admin123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    networks:
      - app-network
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "admin123!", "-Q", "SELECT 1"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 20s

  #RabbitMQ
  rabbitmq:
    image: "rabbitmq:management"
    container_name: "rabbitmq"
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: admin123!
      RABBITMQ_DEFAULT_PASS: admin123!
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq]

  #Java
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: deltech-backend:latest
    container_name: deltech-backend
    ports:
      - "8080:8080"
    depends_on:
      - mssql
      - rabbitmq
#    restart: on-failure
    environment:
      DATA_URL: jdbc:sqlserver://mssql:1433;databaseName=master;encrypt=true;trustServerCertificate=true
      DATA_USER: sa
      DATA_PASSWORD: admin123!
      RABBIT_HOST: rabbitmq
      RABBIT_USERNAME: admin123!
      RABBIT_PASSWORD: admin123!
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mssql-data:
  rabbitmq_data:
